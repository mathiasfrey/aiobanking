version: "3"
services:
  zookeeper:
    image: debezium/zookeeper:1.8
    ports:
     - 2181:2181
     - 2888:2888
     - 3888:3888
  kafka:
    image: debezium/kafka:1.8
    ports:
      - 9092:9092
    links:
      - zookeeper
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181
  mysql:
    image: debezium/example-mysql:1.8
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=debezium
      - MYSQL_USER=mysqluser
      - MYSQL_PASSWORD=mysqlpw 
  connect:
    image: debezium/connect:1.8
    build:
      context: debezium
    ports:
      - 8083:8083
      - 5005:5005
    links:
      - kafka
      - mysql
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_source_connect_statuses


#   kafka:
#     image: confluentinc/cp-kafka:latest
#     depends_on:
#       - zookeeper
#     ports:
#       - 29092:29092
#     environment:
#       KAFKA_BROKER_ID: 1
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
#       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#       KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#   db2:
#     image: mysql:8.0 
#     environment:
#       MYSQL_DATABASE: "db"
#       MYSQL_USER: "user"
#       MYSQL_PASSWORD: "password"
#       MYSQL_ROOT_PASSWORD: "password"
#     ports:
#       - '3306:3306'
#     expose:
#       - '3306'
#     volumes:
#       - my-db:/var/lib/mysql
#   db:
#     image: postgres
#     container_name: postgres
#     environment:
#       POSTGRES_DB: "db"
#       POSTGRES_HOST_AUTH_METHOD: "trust"
#       #DB_NAME: postgres    
#       #DB_USER: postgres    
#       #DB_PASS: postgres
#     command:
#       - "postgres"
#       - "-c"
#       - "wal_level=logical"
#     volumes:
#       - pgdata:/var/lib/posgresql/data
#   sor:
#     build:
#       context: .
#       dockerfile: django.Dockerfile
#     ports:
#       - "8000:8000"
#     environment:
#       - POSTGRES_NAME=postgres
#       - POSTGRES_USER=postgres
#       - POSTGRES_PASSWORD=postgres
#     volumes:
#       - ./sor:/sor
#     command: python manage.py runserver 0.0.0.0:8000
#     depends_on:
#       - db
#   faust:
#     container_name: faust
#     build: 
#       context: .
#       dockerfile: faust.Dockerfile  
#     command: faust -A soa_app worker -l info
#     depends_on:
#       - kafka
#   connect:
#     image: debezium/connect:latest
#     environment:
#       GROUP_ID: 1
#       CONFIG_STORAGE_TOPIC: my_connect_configs
#       OFFSET_STORAGE_TOPIC: my_connect_offsets
#       STATUS_STORAGE_TOPIC: my_connect_statuses
#       BOOTSTRAP_SERVERS: "kafka:9092"
#     ports:
#       - "8083:8083"
#     depends_on:
#       - db
#       - kafka
# volumes:
#   pgdata:
#   my-db: